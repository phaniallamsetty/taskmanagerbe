name: Build, Containerize, and Push Java Spring Project

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up JDK (for building the Java Spring application)
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '22'
        distribution: 'temurin' #AdoptOpenJDK's Temurin distribution

    # Step 3: Cache Maven dependencies
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    # Step 4: Build the project (Maven)
    - name: Build with Maven
      run: mvn clean install

    #Step 5: Run tests
    - name: Run tests
      run: mvn test

    # Step 6: Build Docker Image
    - name: Build Docker Image
      run: |
        docker build -t phaniallamsetty/taskmanagerbe:${{ github.sha }} .

    # Step 7: Log into Docker Hub
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    #Step 8: Push Docker image to Docker Hub
    - name: Push Docker Image
      run: |
        docker push phaniallamsetty/taskmanagerbe:${{ github.sha }}

    #Step 9: Push build artifacts
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: target/*.jar
